language: cpp
env:
  global:
    - MINCONDA_VERSION="latest"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"
matrix:
  fast_finish: true
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
    - os: osx
      osx_image: xcode10
      compiler: clang
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
      env: XPYT_USE_SHARED_XEUS=0 XPYT_USE_SHARED_XEUS_PYTHON=1
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
      env: XPYT_USE_SHARED_XEUS=1 XPYT_USE_SHARED_XEUS_PYTHON=0
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
      env: XPYT_USE_SHARED_XEUS=0 XPYT_USE_SHARED_XEUS_PYTHON=0
install:
    # Define the version of miniconda to download
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        MINCONDA_OS=$MINCONDA_LINUX;
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        MINCONDA_OS=$MINCONDA_OSX;
      fi
    - wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda config --add channels conda-forge
    - conda update -q conda
    # Host dependencies
    - conda install xeus=0.23.15 -c conda-forge/label/broken -c conda-forge
    - conda install nlohmann_json cppzmq xtl pybind11=2.5.0 pybind11_json=0.2.6 jedi=0.15.1 pygments=2.3.1 ptvsd ipython=7.14.0 -c conda-forge
    # Build dependencies
    - conda install cmake -c conda-forge
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        conda install cxx-compiler -c conda-forge;
      fi
    # Test dependencies
    - conda install pytest jupyter_kernel_test -c conda-forge;
    - conda list
    - echo $CXX
    - pip install example_magic
    # Activate root environment
    - source activate root
    # For debugging
    - which python
    - python --version
    # Build and install xeus-python
    - mkdir build
    - cd build
    - if [[ "$XPYT_USE_SHARED_XEUS_PYTHON" == 0 ]]; then
        CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DXPYT_BUILD_SHARED=OFF -DXPYT_USE_SHARED_XEUS_PYTHON=OFF";
      fi
    - if [[ "$XPYT_USE_SHARED_XEUS" == 0 ]]; then
        CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DXPYT_USE_SHARED_XEUS=OFF";
      fi
    # The xeus conda package is built with CMAKE_CXX_STANDARD=17
    - CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DCMAKE_CXX_STANDARD=17";
    - cmake -D CMAKE_INSTALL_PREFIX=$HOME/miniconda -D XPYT_DOWNLOAD_GTEST=ON -D PYTHON_EXECUTABLE=`which python` -D CMAKE_INSTALL_LIBDIR=lib -D CMAKE_C_COMPILER=$CC -D CMAKE_CXX_COMPILER=$CXX ${CMAKE_EXTRA_ARGS} ..
    - make -j2 install
script:
    - cd test
    - ./test_xeus_python
    - cd ../../test && py.test . -v;
